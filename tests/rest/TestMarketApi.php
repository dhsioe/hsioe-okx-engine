<?php
/**
 * 市场行情接口测试
 * @author: hsioe1111@gmail.com
 * @date: 2024/8/19
 * @description:
 */

namespace Hsioe\QuantOkxApi\Tests\rest;


use GuzzleHttp\Exception\GuzzleException;
use Hsioe\QuantOkxApi\OkxApi;
use Hsioe\QuantOkxApi\Rest\Apis\MarketApi;
use Hsioe\QuantOkxApi\Rest\Apis\Req\CandleRequest;
use Hsioe\QuantOkxApi\Rest\Exception\OkxApiException;

class TestMarketApi extends ApiTestCase
{
    
    protected MarketApi $api;
    
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->api = OkxApi::market($this->apiRequest);
    }
    
    /**
     * 测试获取行情接口
     * @return void
     * @throws GuzzleException
     * @throws OkxApiException
     */
    public function testGetTickers()
    {
        $res = $this->api->tickers('OPTION');
        $this->assertEquals(0, $res['code']);
        print_r($res);
        $res1 = $this->api->ticker('BTC-USDT-SWAP');
        $this->assertEquals(0, $res1['code']);
    }
    
    /**
     * 获取市场历史K线数据
     * @return void
     * @throws GuzzleException
     * @throws OkxApiException
     */
    public function testGetCandles()
    {
        $res = $this->api->getCandles(new CandleRequest(['instId' => 'BTC-USDT-SWAP']));
        $this->assertEquals(0, $res['code']);
        
        
        $res1 = $this->api->getHistoryCandles(new CandleRequest(['instId' => 'BTC-USDT-SWAP']));
        print_r($res1);
        $this->assertEquals(0, $res1['code']);
    }
}