<?php
/**
 * 测试数据
 * @author: hsioe1111@gmail.com
 * @date: 2024/8/8
 * @description:
 */

namespace Hsioe\QuantOkxApi\Tests\rest;

use GuzzleHttp\Exception\GuzzleException;
use Hsioe\QuantOkxApi\Rest\Apis\AccountApi;
use Hsioe\QuantOkxApi\Rest\Apis\Req\LeverageRequest;
use Hsioe\QuantOkxApi\Rest\Exception\OkxApiException;

class TestAccountApi extends ApiTestCase
{
    protected AccountApi $api;
    
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->api = new AccountApi($this->apiRequest);
    }
    
    /**
     * @return void
     * @throws GuzzleException
     * @throws OkxApiException
     */
    public function testAccountBalance()
    {
        $res = $this->api->getBalance('BTC');
        print_r($res);
        $this->assertIsArray($res);
    }
    
    /**
     * 设置杠杆
     *
     * @return void
     * @throws GuzzleException
     * @throws OkxApiException
     */
    public function testSetLeverage()
    {
        $req = new LeverageRequest([
            'instId' => 'ETH-USDT-SWAP',
            'lever' => 100
        ]);
        
        $res = $this->api->setLeverage($req);
        $this->assertIsArray($res);
    }
    
    /**
     * 测试获取配置
     * @return void
     * @throws GuzzleException
     * @throws OkxApiException
     */
    public function testGetConfig()
    {
        $res = $this->api->getAccountConfig();
        $this->assertEquals(0, $res['code']);
    }
    
    /**
     * 设置持仓模式
     *
     * @return void
     * @throws GuzzleException
     * @throws OkxApiException
     */
    public function testSetPosMode()
    {
        $res = $this->api->setPositionMode('long_short_mode');
        $this->assertEquals(0, $res['code']);
    }
    
    /**
     * 获取持仓风险
     *
     * @return void
     * @throws GuzzleException
     * @throws OkxApiException
     */
    public function testPositionRisk()
    {
        $res = $this->api->getPositionRisk();
        $this->assertEquals(0, $res['code']);
    }
    
    /**
     * 获取杠杆数
     *
     * @return void
     * @throws GuzzleException
     * @throws OkxApiException
     */
    public function testGetLeverage()
    {
        $res = $this->api->getLeverage('BTC-USDT-SWAP,ETH-USDT-SWAP');
        echo json_encode($res) . PHP_EOL;
        $this->assertEquals(0, $res['code']);
    }
    
    
    public function testGetPosition(): void
    {
        $res = $this->api->getPositions('MARGIN');
        print_r($res);
        $this->assertEquals(0, $res['code']);
    }
}